version: '3.7'

x-base: &base
  image: robotology/webgui:default
  build:
    dockerfile: Dockerfile
    context: .
    args:
      username: user1
      uid: 1000
      gid: 1000
  environment:
    - DISPLAY=${DISPLAY}
    - XAUTHORITY=/home/user1/.Xauthority
    - QT_X11_NO_MITSHM=1
    - DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user1/1000/bus
    - XDG_RUNTIME_DIR=/run/user1/1000
    - YARP_COLORED_OUTPUT=1
    - YARP_NAMESPACE=/cer02
    - ROS_HOSTNAME=localhost
    - ROS_MASTER_URI=http://localhost:11311
    - YARP_PORTNUMBER_grabber=20000
    - PYTHONPATH=${PYTHONPATH}:/home/user1/yarp/build/lib/python3/
  volumes:
    - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
    - "${XAUTHORITY}:/home/user1/.Xauthority:rw"
    - "${XDG_RUNTIME_DIR}/yarp:/run/user1/1000/yarp"
    - "${XDG_RUNTIME_DIR}/dconf:/run/user1/1000/dconf"
    - "${XDG_RUNTIME_DIR}/bus:/run/user1/1000/bus"
    - "${HOME}/.config/yarp:/home/user1/.config/yarp:ro"
    - "${HOME}/.local/share/yarp:/home/user1/.local/share/yarp:ro"
    # - ros1-volume:/home/user1/.ros
  # network_mode: host
  # ipc: host
  pid: host
  security_opt:
    - apparmor:unconfined

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.5
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker --web --docker --docker.watch --docker.domain=localhost --logLevel=DEBUG
      - --entrypoints.web-secure.address=:443 
      - --providers.docker=true
    ports:
      # The HTTP port
      # - "80:80"
      # - "443:443"
      - "8080:8080"
      - "20000:20000"
      - "33000:33000"
    network_mode: host
    volumes:
      # So that Traefik can listen to the Docker events
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./config:/etc/traefik"
      - "./certificates:/certificates"

  webgui:
    <<: *base
    container_name: webgui

    #command: bash -c "sleep 5;cd /home/user1/yarp-web-teleop; python3 server.py --map_port 20001 --camera_port 20000 --camera_host webgui.docker --map_host webgui.docker --click_port /click --traefik"
    #command: terminator --no-dbus -T "webgui"
    command: yarp run --server /traefik --log
    labels:
      - "traefik.enable=true"
      # set traefik to enable dns and tls, together with input and output port
      - "traefik.http.routers.webguirouter.rule=Host(`webgui.docker`)"
      - "traefik.http.routers.webguirouter.entrypoints=webgui"
      - "traefik.http.routers.webguirouter.tls=true"
      - "traefik.http.routers.webguirouter.service=webguiservice"
      - "traefik.http.services.webguiservice.loadbalancer.server.port=16001"
      - "traefik.http.routers.fakeframegrabber.rule= Host(`webgui.docker`)"
      - "traefik.http.routers.fakeframegrabber.entrypoints=mjpegsecure"
      - "traefik.http.routers.fakeframegrabber.tls=true" 
      - "traefik.http.routers.fakeframegrabber.service=fakeframegrabberservice1"
      - "traefik.http.services.fakeframegrabberservice1.loadbalancer.server.port=11000"
      - "traefik.http.routers.fakeframegrabber2.rule= Host(`webgui.docker`)"
      - "traefik.http.routers.fakeframegrabber2.entrypoints=mjpegsecure2"
      - "traefik.http.routers.fakeframegrabber2.tls=true"
      - "traefik.http.routers.fakeframegrabber2.service=fakeframegrabberservice2"
      - "traefik.http.services.fakeframegrabberservice2.loadbalancer.server.port=11001"
    network_mode: host
    depends_on:
      - reverse-proxy
